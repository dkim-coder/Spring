<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--IUserDAO mybatis-->
<mapper namespace="com.ssafy.live.model.dao.user.IUserDAO">

    <resultMap type="User" id="userResultMap">
        <id property="no" column="no"/>
        <result property="id" column="id"/>
        <result property="password" column="password"/>
        <result property="user_name" column="user_name"/>
        <result property="email" column="email"/>
        <result property="nickname" column="nickname"/>
        <result property="image" column="image"/>
        <result property="authority" column="authority"/>
    </resultMap>

    <insert id="insert" parameterType="User">
        INSERT INTO user (id, password, user_name, email, nickname)
        VALUES (#{id}, #{password}, #{user_name}, #{email}, #{nickname})
    </insert>

    <select id="findNoById" parameterType="string" resultType="long">
        SELECT no
        FROM user
        WHERE id = #{id}
    </select>

    <update id="updatePassword" parameterType="User">
        UPDATE user SET password = #{password}
        WHERE no = #{no}
    </update>

    <update id="updateNickname" parameterType="User">
        UPDATE user SET nickname = #{nickname}
        WHERE no = #{no}
    </update>

    <select id="findByNickname" parameterType="string" resultMap="userResultMap">
        SELECT COUNT(*)
        FROM user
        WHERE nickname = #{nickname}
    </select>

    <update id="updateImage" parameterType="User">
        UPDATE user SET image = #{image}
        WHERE no = #{no}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM user
        WHERE no = #{no}
    </delete>

    <select id="findByNo" parameterType="long" resultType="User" resultMap="userResultMap">
        SELECT no, id, password, user_name, email, nickname, image, authority
        FROM user
        WHERE no = #{no}
    </select>

    <select id="findIdByEmail" parameterType="string" resultType="string" resultMap="userResultMap">
        SELECT id
        FROM user
        WHERE email = #{email}
    </select>

    <select id="findPasswordByID" parameterType="string" resultType="string" resultMap="userResultMap">
        SELECT password
        FROM user
        WHERE id = #{id}
    </select>

    <select id="findByIdAndPassword" resultType="User" resultMap="userResultMap">
        SELECT no, id, password, user_name, email, nickname, image, authority
        FROM user
        WHERE id = #{id} AND password = #{password}
    </select>


</mapper>
